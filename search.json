[{"path":"https://loelschlaeger.de/vntrs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lennart Oelschläger. Author, maintainer.","code":""},{"path":"https://loelschlaeger.de/vntrs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Oelschläger L (2023). vntrs: Variable Neighborhood Trust Region Search. R package version 0.1.1, https://loelschlaeger.de/vntrs/.","code":"@Manual{,   title = {vntrs: Variable Neighborhood Trust Region Search},   author = {Lennart Oelschläger},   year = {2023},   note = {R package version 0.1.1},   url = {https://loelschlaeger.de/vntrs/}, }"},{"path":[]},{"path":"https://loelschlaeger.de/vntrs/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Variable Neighborhood Trust Region Search","text":"package implementation variable neighborhood trust region search algorithm Bierlaire et al. (2009) “Heuristic Nonlinear Global Optimization”.","code":""},{"path":"https://loelschlaeger.de/vntrs/index.html","id":"how-to-get-started","dir":"","previous_headings":"","what":"How to get started","title":"Variable Neighborhood Trust Region Search","text":"Install latest package version via running install.packages(\"vntrs\") R console. Specify R function f computes value, gradient, Hessian function optimized returns named list elements value, gradient, hessian. Call vntrs::vntrs(f = f, npar = npar, minimize = minimize), npar number parameters f minimize boolean, determining whether f minimized (minimize = TRUE, default) maximized (minimize = FALSE). Optionally, can tune algorithm specifying named list controls passing search. See help file help(\"vntrs\") details.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/check_controls.html","id":null,"dir":"Reference","previous_headings":"","what":"Check controls — check_controls","title":"Check controls — check_controls","text":"function checks input controls vntrs package.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/check_controls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check controls — check_controls","text":"","code":"check_controls(controls)"},{"path":"https://loelschlaeger.de/vntrs/reference/check_controls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check controls — check_controls","text":"controls Either NULL named list following elements. Missing elements set default values parentheses. init_runs (5): number initial searches. init_min (-1): minimum argument value random initialization. init_max (1): maximum argument value random initialization. init_iterlim (20): number iterations initial searches. neighborhoods (5): number nested neighborhoods. neighbors (5): number neighbors neighborhood. beta (0.05): non-negative weight factor account function's curvature selection neighbors. beta = 0, curvature ignored. higher value, higher probability selecting neighbor direction highest function curvature. iterlim (1000): maximum number iterations performed local search terminated. tolerance (1e-6): positive scalar giving tolerance comparing different optimal arguments equality. time_limit (NULL): time limit seconds algorithm.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/check_controls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check controls — check_controls","text":"checked filled list controls.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/check_f.html","id":null,"dir":"Reference","previous_headings":"","what":"Check function — check_f","title":"Check function — check_f","text":"function checks input f vntrs package.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/check_f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check function — check_f","text":"","code":"check_f(f, npar, controls)"},{"path":"https://loelschlaeger.de/vntrs/reference/check_f.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check function — check_f","text":"f function computes value, gradient, Hessian function optimized returns named list elements value, gradient, hessian. npar number parameters f. controls Either NULL named list following elements. Missing elements set default values parentheses. init_runs (5): number initial searches. init_min (-1): minimum argument value random initialization. init_max (1): maximum argument value random initialization. init_iterlim (20): number iterations initial searches. neighborhoods (5): number nested neighborhoods. neighbors (5): number neighbors neighborhood. beta (0.05): non-negative weight factor account function's curvature selection neighbors. beta = 0, curvature ignored. higher value, higher probability selecting neighbor direction highest function curvature. iterlim (1000): maximum number iterations performed local search terminated. tolerance (1e-6): positive scalar giving tolerance comparing different optimal arguments equality. time_limit (NULL): time limit seconds algorithm.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/check_f.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check function — check_f","text":"return value, called side-effects.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/initialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize search — initialize","title":"Initialize search — initialize","text":"Function initializes variable neighborhood trust region search.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/initialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize search — initialize","text":"","code":"initialize(f, npar, minimize, controls)"},{"path":"https://loelschlaeger.de/vntrs/reference/initialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize search — initialize","text":"f function computes value, gradient, Hessian function optimized returns named list elements value, gradient, hessian. npar number parameters f. minimize TRUE, f gets minimized. FALSE, maximized. controls Either NULL named list following elements. Missing elements set default values parentheses. init_runs (5): number initial searches. init_min (-1): minimum argument value random initialization. init_max (1): maximum argument value random initialization. init_iterlim (20): number iterations initial searches. neighborhoods (5): number nested neighborhoods. neighbors (5): number neighbors neighborhood. beta (0.05): non-negative weight factor account function's curvature selection neighbors. beta = 0, curvature ignored. higher value, higher probability selecting neighbor direction highest function curvature. iterlim (1000): maximum number iterations performed local search terminated. tolerance (1e-6): positive scalar giving tolerance comparing different optimal arguments equality. time_limit (NULL): time limit seconds algorithm.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/initialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize search — initialize","text":"list list L identified optima contains lists value argument identified optimum. best initial point x_best.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/interruption.html","id":null,"dir":"Reference","previous_headings":"","what":"Interrupt local search — interruption","title":"Interrupt local search — interruption","text":"function checks local search can interrupted prematurely.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/interruption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interrupt local search — interruption","text":"","code":"interruption(f, point, L, minimize)"},{"path":"https://loelschlaeger.de/vntrs/reference/interruption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interrupt local search — interruption","text":"f function computes value, gradient, Hessian function optimized returns named list elements value, gradient, hessian. point current location local search. L list identified optima contains lists value argument identified optimum. minimize TRUE, f gets minimized. FALSE, maximized.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/interruption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interrupt local search — interruption","text":"TRUE premature interruption, FALSE .","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/local.html","id":null,"dir":"Reference","previous_headings":"","what":"Local trust region search — local","title":"Local trust region search — local","text":"Function links trust.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local trust region search — local","text":"","code":"local(f, parinit, minimize, controls, L)"},{"path":"https://loelschlaeger.de/vntrs/reference/local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Local trust region search — local","text":"f function computes value, gradient, Hessian function optimized returns named list elements value, gradient, hessian. parinit Passed trust. minimize TRUE, f gets minimized. FALSE, maximized. controls Either NULL named list following elements. Missing elements set default values parentheses. init_runs (5): number initial searches. init_min (-1): minimum argument value random initialization. init_max (1): maximum argument value random initialization. init_iterlim (20): number iterations initial searches. neighborhoods (5): number nested neighborhoods. neighbors (5): number neighbors neighborhood. beta (0.05): non-negative weight factor account function's curvature selection neighbors. beta = 0, curvature ignored. higher value, higher probability selecting neighbor direction highest function curvature. iterlim (1000): maximum number iterations performed local search terminated. tolerance (1e-6): positive scalar giving tolerance comparing different optimal arguments equality. time_limit (NULL): time limit seconds algorithm. L list identified optima contains lists value argument identified optimum.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Local trust region search — local","text":"list success: boolean, determining wether local search successfully converged. value: value point local search terminated. argument: point local search terminated.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/select_neighbors.html","id":null,"dir":"Reference","previous_headings":"","what":"Select neighbors — select_neighbors","title":"Select neighbors — select_neighbors","text":"Function selects neighbors around given point x.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/select_neighbors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select neighbors — select_neighbors","text":"","code":"select_neighbors(f, x, neighborhood_expansion, controls)"},{"path":"https://loelschlaeger.de/vntrs/reference/select_neighbors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select neighbors — select_neighbors","text":"f function computes value, gradient, Hessian function optimized returns named list elements value, gradient, hessian. x point domain f. neighborhood_expansion scaling factor, specifying expansion neighborhood. controls Either NULL named list following elements. Missing elements set default values parentheses. init_runs (5): number initial searches. init_min (-1): minimum argument value random initialization. init_max (1): maximum argument value random initialization. init_iterlim (20): number iterations initial searches. neighborhoods (5): number nested neighborhoods. neighbors (5): number neighbors neighborhood. beta (0.05): non-negative weight factor account function's curvature selection neighbors. beta = 0, curvature ignored. higher value, higher probability selecting neighbor direction highest function curvature. iterlim (1000): maximum number iterations performed local search terminated. tolerance (1e-6): positive scalar giving tolerance comparing different optimal arguments equality. time_limit (NULL): time limit seconds algorithm.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/select_neighbors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select neighbors — select_neighbors","text":"list points domain f neighbors x.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/unique_optimum.html","id":null,"dir":"Reference","previous_headings":"","what":"Check new optimum for uniqueness — unique_optimum","title":"Check new optimum for uniqueness — unique_optimum","text":"function checks new optimum argument yet contained L.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/unique_optimum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check new optimum for uniqueness — unique_optimum","text":"","code":"unique_optimum(L, argument, tolerance)"},{"path":"https://loelschlaeger.de/vntrs/reference/unique_optimum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check new optimum for uniqueness — unique_optimum","text":"L list identified optima contains lists value argument identified optimum. argument argument candidate optimum. tolerance non-negative numeric value. identified optimum candidate optimum, coordinate differences smaller tolerance, considered equal.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/unique_optimum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check new optimum for uniqueness — unique_optimum","text":"boolean. TRUE, argument contained L. FALSE, argument already contained L.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/vntrs-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vntrs: Variable Neighborhood Trust Region Search — vntrs-package","title":"vntrs: Variable Neighborhood Trust Region Search — vntrs-package","text":"implementation variable neighborhood trust region algorithm Bierlaire et al. (2009) \"Heuristic Nonlinear Global Optimization\" doi:10.1287/ijoc.1090.0343 .","code":""},{"path":[]},{"path":"https://loelschlaeger.de/vntrs/reference/vntrs-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vntrs: Variable Neighborhood Trust Region Search — vntrs-package","text":"Maintainer: Lennart Oelschläger lennart.oelschlaeger@uni-bielefeld.de (ORCID)","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/vntrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable neighborhood trust region search — vntrs","title":"Variable neighborhood trust region search — vntrs","text":"function performs variable neighborhood trust region search.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/vntrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable neighborhood trust region search — vntrs","text":"","code":"vntrs(f, npar, minimize = TRUE, controls = NULL, quiet = TRUE, seed = NULL)"},{"path":"https://loelschlaeger.de/vntrs/reference/vntrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable neighborhood trust region search — vntrs","text":"f function computes value, gradient, Hessian function optimized returns named list elements value, gradient, hessian. npar number parameters f. minimize TRUE, f gets minimized. FALSE, maximized. controls Either NULL named list following elements. Missing elements set default values parentheses. init_runs (5): number initial searches. init_min (-1): minimum argument value random initialization. init_max (1): maximum argument value random initialization. init_iterlim (20): number iterations initial searches. neighborhoods (5): number nested neighborhoods. neighbors (5): number neighbors neighborhood. beta (0.05): non-negative weight factor account function's curvature selection neighbors. beta = 0, curvature ignored. higher value, higher probability selecting neighbor direction highest function curvature. iterlim (1000): maximum number iterations performed local search terminated. tolerance (1e-6): positive scalar giving tolerance comparing different optimal arguments equality. time_limit (NULL): time limit seconds algorithm. quiet TRUE, progress messages suppressed. seed Set seed sampling random starting points.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/vntrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variable neighborhood trust region search — vntrs","text":"data frame. row contains information identified optimum. first npar columns \"p1\",...,\"p<npar>\" store argument values, next column \"value\" optimal function values last column \"global\" contains TRUE global optima FALSE local optima.","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/vntrs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variable neighborhood trust region search — vntrs","text":"Bierlaire et al. (2009) \"Heuristic Nonlinear Global Optimization\" doi:10.1287/ijoc.1090.0343 .","code":""},{"path":"https://loelschlaeger.de/vntrs/reference/vntrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variable neighborhood trust region search — vntrs","text":"","code":"rosenbrock <- function(x) {   stopifnot(is.numeric(x))   stopifnot(length(x) == 2)   f <- expression(100 * (x2 - x1^2)^2 + (1 - x1)^2)   g1 <- D(f, \"x1\")   g2 <- D(f, \"x2\")   h11 <- D(g1, \"x1\")   h12 <- D(g1, \"x2\")   h22 <- D(g2, \"x2\")   x1 <- x[1]   x2 <- x[2]   f <- eval(f)   g <- c(eval(g1), eval(g2))   h <- rbind(c(eval(h11), eval(h12)), c(eval(h12), eval(h22)))   list(value = f, gradient = g, hessian = h) } vntrs(f = rosenbrock, npar = 2, seed = 1, controls = list(neighborhoods = 1)) #>   p1        p2        value global #> 1  1 0.9999999 2.114623e-15   TRUE"},{"path":"https://loelschlaeger.de/vntrs/news/index.html","id":"vntrs-011","dir":"Changelog","previous_headings":"","what":"vntrs 0.1.1","title":"vntrs 0.1.1","text":"Small bug fixes.","code":""},{"path":"https://loelschlaeger.de/vntrs/news/index.html","id":"vntrs-010","dir":"Changelog","previous_headings":"","what":"vntrs 0.1.0","title":"vntrs 0.1.0","text":"CRAN release: 2021-10-18 Initial release.","code":""}]
